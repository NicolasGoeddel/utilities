# Leitet HTTP-Anfragen auf HTTPS weiter. Ab dann greift HTTPS und der Browser sollte immer automatisch auf HTTPS gehen.
# Au√üerdem ist die Weiterleitung hier permanent, also 301.
# Anwendungsbeispiel:
# Use AutoRedirect test.satzweiss.com
#
<Macro AutoRedirect $domain>
	<VirtualHost *:80>
		ServerName $domain
		Include sites-includes/http-base.conf
	</VirtualHost>
</Macro>

# Anwendungsbeispiel:
# Use LECert test.satzweiss.com
#
<Macro LECert $cert>
	Include sites-includes/ssl-base.conf
	
	<IfDefine !CERTS_DEFINED>
		SSLCertificateFile      /etc/letsencrypt/live/$cert/cert.pem
		SSLCertificateKeyFile   /etc/letsencrypt/live/$cert/privkey.pem
		SSLCertificateChainFile /etc/letsencrypt/live/$cert/fullchain.pem
	</IfDefine>
	<IfDefine CERTS_DEFINED>
		UnDefine CERTS_DEFINED
	</IfDefine>
</Macro>


# Anwendungsbeispiel:
# Use PHPSock /home/matomo/www/matomo php-fpm-matomo.sock 
#
<Macro PHPSock $directory $socket>
	<IfModule setenvif_module>
		SetEnvIfNoCase ^Authorization$ "(.+)" HTTP_AUTHORIZATION=$1
	</IfModule>

	<FilesMatch ".+\.ph(p[3457]?|t|tml)$">
		<If "-f %{SCRIPT_FILENAME}">
			SetHandler "proxy:unix:/run/php/$socket|fcgi://localhost"
		</If>
	</FilesMatch>
	<FilesMatch ".+\.phps$">
		Require all denied
	</FilesMatch>
	# Deny access to files without filename (e.g. '.php')
	<FilesMatch "^\.ph(p[3457]?|t|tml|ps)$">
		Require all denied
	</FilesMatch>

	<Directory "$directory">
		Options +FollowSymLinks
		AllowOverride All
		Require all granted
		Allow from all

		<IfModule mod_dav.c>
			Dav off
		</IfModule>
	</Directory>
</Macro>

# Anwendungsbeispiel:
# Use PHPAliasSock /matomo /home/matomo/www/matomo php-fpm-matomo.sock
#
<Macro PHPAliasSock $alias $directory $socket>
	Alias $alias $directory
	
	Use PHPHandler $socket $directory
	
	RewriteRule ^$alias(/.*)?$ "-" [L]
</Macro>
